{"componentChunkName":"component---src-templates-blog-post-js","path":"/java/dependency-injection/","result":{"data":{"site":{"siteMetadata":{"title":"Samba Space"}},"markdownRemark":{"id":"19fbaa90-d78a-5328-b391-e63ca2352ae1","excerpt":"DI(Dependency Injection) dependecy가 있는 resource를 외부에서 주입받는 기법으로 유연성과 테스트 용이성을 높여준다. asdf reference Joshua Bloch, 『Effective Java 3rd Edition』, 인사이트(2020), p2…","html":"<h1>DI(Dependency Injection)</h1>\n<p>dependecy가 있는 resource를 외부에서 주입받는 기법으로 유연성과 테스트 용이성을 높여준다.</p>\n<h1>asdf</h1>\n<h1>reference</h1>\n<ul>\n<li>Joshua Bloch, 『Effective Java 3rd Edition』, 인사이트(2020), p28-30</li>\n</ul>","frontmatter":{"title":"정적 팩터리 메소드(static factory method)","date":"February 17, 2021","description":null}},"previous":{"fields":{"slug":"/new-beginnings/"},"frontmatter":{"title":"New Beginnings"}},"next":null},"pageContext":{"id":"19fbaa90-d78a-5328-b391-e63ca2352ae1","previousPostId":"660a5e2d-2cb2-52b2-b8dc-3ccc8da30405","nextPostId":null}},"staticQueryHashes":["2841359383","916993862"]}